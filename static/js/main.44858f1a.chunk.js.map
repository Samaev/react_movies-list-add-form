{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setdescription","setimgUrl","setimdbUrl","setimdbId","settitle","hastitleError","settitleError","hasdescriptionError","setdescriptionError","hasimdbUrlError","setimdbUrlError","hasimdbIdError","setimdbIdError","hasimgUrlError","setimgUrlError","onSubmit","event","preventDefault","Error","type","name","value","onChange","target","App","moviesFromServer","setMovies","key","setKey","newKey","String","Number","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44858f1a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard key={movie.imdbId} {...movie} />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n  movies: Movie[],\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd, movies }) => {\n  const [description, setdescription] = useState('');\n  const [imgUrl, setimgUrl] = useState('');\n  const [imdbUrl, setimdbUrl] = useState('');\n  const [imdbId, setimdbId] = useState('');\n  const [title, settitle] = useState('');\n  const [hastitleError, settitleError] = useState(false);\n  const [hasdescriptionError, setdescriptionError] = useState(false);\n  const [hasimdbUrlError, setimdbUrlError] = useState(false);\n  const [hasimdbIdError, setimdbIdError] = useState(false);\n  const [hasimgUrlError, setimgUrlError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    settitleError(!title);\n    setdescriptionError(!description);\n    setimgUrlError(!imgUrl);\n    setimdbIdError(!imdbId);\n    setimdbUrlError(!imdbUrl);\n\n    if (!movies) {\n      throw new Error('You got nothing to watch from storage');\n      /// /make a variable to show!!!!!!!!!!!!!!!!!!!!!!!!!!\n    }\n\n    if (!title || !description || !imgUrl || !imdbId || !imdbUrl) {\n      return;\n    }\n\n    onAdd({\n      title, description, imgUrl, imdbUrl, imdbId,\n    });\n\n    settitle('');\n    setdescription('');\n    setimgUrl('');\n    setimdbUrl('');\n    setimdbId('');\n  };\n\n  return (\n    <form className=\"NewMovie\" onSubmit={handleSubmit}>\n      <div>\n        <label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={event => {\n              settitle(event.target.value);\n              settitleError(false);\n            }}\n          />\n          {hastitleError && (<p>enter title!!</p>)}\n          Title\n        </label>\n      </div>\n\n      <div>\n        <label>\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={event => {\n              setimgUrl(event.target.value);\n              setimgUrlError(false);\n            }}\n          />\n          imgUrl\n        </label>\n      </div>\n      {hasimgUrlError && (<p>img needed</p>)}\n      <div>\n        <label>\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={event => {\n              setimdbUrl(event.target.value);\n              setimdbUrlError(false);\n            }}\n          />\n          imdbUrl\n        </label>\n      </div>\n      {hasimdbUrlError && (<p>imdb yok</p>)}\n      <div>\n        <label>\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={event => {\n              setimdbId(event.target.value);\n              setimdbIdError(false);\n            }}\n          />\n          ID MOVIE\n        </label>\n      </div>\n      {hasimdbIdError && (<p>id id id</p>)}\n      <div>\n        <textarea\n          name=\"description\"\n          value={description}\n          onChange={event => {\n            setdescription(event.target.value);\n            setdescriptionError(false);\n          }}\n        >\n          Description\n        </textarea>\n      </div>\n      {hasdescriptionError && (<p>where is descr</p>)}\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n  const [key, setKey] = useState('');\n\n  const addMovie = (movie: Movie) => {\n    const newKey = `tt${String((Number(movies[0].imdbId.slice(1)) + 1))}`;\n\n    setMovies([...movies, movie]);\n    setKey(newKey);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie key={key} onAdd={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}